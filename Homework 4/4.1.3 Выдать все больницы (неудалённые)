create or replace package pkg_all_hospitals as
    function f_all_hospitals return sys_refcursor;
    function f_all_hospitals(v_input_id number) return sys_refcursor;
end;
create or replace package body pkg_all_hospitals as
    function f_all_hospitals
        return sys_refcursor
        as cursor1 sys_refcursor;
        v_today number;
    begin
        select to_char (sysdate, 'D') into v_today from dual;
        open cursor1 for
        select HOSPITALS.HOSPITAL_NAME, HOSPITALS.AVAILABILITY, count(distinct DoCTORS.ID_DOCTOR) as "Количество врачей", TYPES_HOSPITAL.TYPE_NAME, WORKING_TIME.BEGIN_TIME, WORKING_TIME.END_TIME
            from hospitals
            join DOCTORS on HOSPITALS.ID_HOSPITAL = DOCTORS.ID_HOSPITAL
            right outer join DOCTOR_SPECIALTIES on DOCTORS.ID_DOCTOR = DOCTOR_SPECIALTIES.ID_DOCTOR
            join TYPES_HOSPITAL on HOSPITALS.ID_TYPE = TYPES_HOSPITAL.ID_TYPE
            join WORKING_TIME on (HOSPITALS.ID_HOSPITAL = WORKING_TIME.ID_HOSPITAL) and (WORKING_TIME.DAY = v_today)
            where (HOSPITALS.DELETE_DT is null) and (DOCTOR_SPECIALTIES.ID_SPECIALTY = 1)
            group by HOSPITAL_NAME, hospitals.AVAILABILITY, HOSPITALS.HOSPITAL_NAME, TYPES_HOSPITAL.ID_TYPE, TYPES_HOSPITAL.TYPE_NAME, WORKING_TIME.BEGIN_TIME, WORKING_TIME.END_TIME
            order by TYPES_HOSPITAL.ID_TYPE, count(distinct DOCTORS.ID_DOCTOR);
        return cursor1;
    end;

    function f_all_hospitals(v_input_id number)
        return sys_refcursor
        as cursor1 sys_refcursor;
        v_today number;
    begin
        select to_char (sysdate, 'D') into v_today from dual;
        open cursor1 for
        select HOSPITALS.HOSPITAL_NAME, HOSPITALS.AVAILABILITY, count(distinct DoCTORS.ID_DOCTOR) as "Количество врачей", TYPES_HOSPITAL.TYPE_NAME, WORKING_TIME.BEGIN_TIME, WORKING_TIME.END_TIME
            from hospitals
            join DOCTORS on HOSPITALS.ID_HOSPITAL = DOCTORS.ID_HOSPITAL
            right outer join DOCTOR_SPECIALTIES on DOCTORS.ID_DOCTOR = DOCTOR_SPECIALTIES.ID_DOCTOR
            join TYPES_HOSPITAL on HOSPITALS.ID_TYPE = TYPES_HOSPITAL.ID_TYPE
            join WORKING_TIME on (HOSPITALS.ID_HOSPITAL = WORKING_TIME.ID_HOSPITAL) and (WORKING_TIME.DAY = v_today)
            where (HOSPITALS.DELETE_DT is null) and (DOCTOR_SPECIALTIES.ID_SPECIALTY = 1) and HOSPITALS.ID_HOSPITAl = v_input_id
            group by HOSPITAL_NAME, hospitals.AVAILABILITY, HOSPITALS.HOSPITAL_NAME, TYPES_HOSPITAL.ID_TYPE, TYPES_HOSPITAL.TYPE_NAME, WORKING_TIME.BEGIN_TIME, WORKING_TIME.END_TIME
            order by TYPES_HOSPITAL.ID_TYPE, count(distinct DOCTORS.ID_DOCTOR);
        return cursor1;
    end;
end;

declare
    v_cursor1 sys_refcursor;
    v_cursor2 sys_refcursor;
    v_id_doctor number;
    v_hospital_name HOSPITALS.HOSPITAL_NAME%type;
    v_availability HOSPITALS.AVAILABILITY%type;
    v_type_name TYPES_HOSPITAL.TYPE_NAME%type;
    v_begin_time WORKING_TIME.BEGIN_TIME%type;
    v_end_time WORKING_TIMe.end_time%type;
begin
    v_cursor1 := pkg_all_hospitals.f_all_hospitals();
    v_cursor2 := pkg_all_hospitals.f_all_hospitals(1);
        LOOP
        FETCH v_cursor1 into v_hospital_name, v_availability, v_id_doctor, v_type_name, v_begin_time, v_end_time ;
           EXIT WHEN v_cursor1%notfound;
           dbms_output.put_line(v_hospital_name || ' ' || v_availability || ' ' || v_id_doctor || ' ' || v_type_name || ' ' || to_char(v_begin_time, 'hh24:mi:ss') || ' ' || to_char(v_end_time, 'hh24:mi:ss'));
        END LOOP;
    CLOSE v_cursor1;
    dbms_output.put_line('------------------------------------------------');
        LOOP
        FETCH v_cursor2 into v_hospital_name, v_availability, v_id_doctor, v_type_name, v_begin_time, v_end_time ;
           EXIT WHEN v_cursor2%notfound;
           dbms_output.put_line(v_hospital_name || ' ' || v_availability || ' ' || v_id_doctor || ' ' || v_type_name || ' ' || to_char(v_begin_time, 'hh24:mi:ss') || ' ' || to_char(v_end_time, 'hh24:mi:ss'));
        END LOOP;
    CLOSE v_cursor2;
end;



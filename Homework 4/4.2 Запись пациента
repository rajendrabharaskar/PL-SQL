CREATE or replace Function f_appointment(v_id_patient in number, v_datetime in date, v_id_talon in number)
   RETURN char
as
    checkid number := 0;
    talon_time_begin date;
    talon_time_end date;
    id_gender_patient number;
    id_gender_speciality number;
    required_min_age number;
    required_max_age number;
    cursor1 sys_refcursor;
    count_lucky number := 0;
    age_patient number;
    date_birth date;
    availability number;
    doc_del date;
    spec_del date;
    hosp_del date;
BEGIN
    select count(CHESNOKOV_SE.PATIENTS.ID_PATIENT)  --Проверка правильности ID паицента
        into checkid
        from CHESNOKOV_SE.PATIENTS
        where PATIENTS.ID_PATIENT = v_id_patient;
    if checkid = 0
        then return 'Неверный ID пациента';
    end if;

    checkid := 0;
    select count(CHESNOKOV_SE.TALONS.ID_TALON) --Проверка правильности ID талона
        into checkid
        from CHESNOKOV_SE.TALONS
        where TALONS.ID_TALON = v_id_talon;
    if checkid = 0
        then return 'Неверный ID талона';
    end if;

    select CHESNOKOV_SE.TALONS.START_DATE --Проверка времени
        into talon_time_begin
        from  chesnokov_se.TALONS
        where TALONS.ID_TALON = v_id_talon;
    select CHESNOKOV_SE.TALONS.END_DATE
        into talon_time_end
        from  chesnokov_se.TALONS
        where TALONS.ID_TALON = v_id_talon;
    if v_datetime not between talon_time_begin and talon_time_end
        then return 'Неверный время для указанного талона';
    end if;
    if talon_time_begin <= sysdate
        then return 'Неверное время начала талона';
    end if;

    checkid := 0;
    select count(CHESNOKOV_SE.JOURNAL.ID_PATIENT) --Проверка записи на этот талон этим пациентом
        into checkid
        from CHESNOKOV_SE.JOURNAL
        where chesnokov_se.JOURNAL.ID_TALON = v_id_talon and CHESNOKOV_SE.JOURNAL.AVAILABILITY = 1;
    if checkid > 0
        then return 'Пациент уже записан в этот талон';
    end if;

    select CHESNOKOV_SE.TALONS.AVAILABILITY --Проверка доступности талона
        into availability
        from TALONS
        where TALONS.ID_TALON = v_id_talon;
    if availability = 0
        then return 'Талон закрыт';
    end if;

    checkid := 0;
    select count(DOCUMENTS_NUMBERS.ID_DOCUMENT_NUMBER)
    into checkid
    from DOCUMENTS_NUMBERS
    where DOCUMENTS_NUMBERS.ID_PATIENT = v_id_patient and DOCUMENTS_NUMBERS.ID_DOCUMENT = 3;
    if checkid = 0
        then return 'Отсуствует полис ОМС';
    end if;

    select CHESNOKOV_SE.PATIENTS.ID_GENDER --Проверка пола возвраста и удаления чего либо
        into id_gender_patient
        from PATIENTS
        where CHESNOKOV_SE.PATIENTS.ID_PATIENT = v_id_patient;
    select CHESNOKOV_SE.PATIENTS.DATE_BIRTH
        into date_birth
        from PATIENTS
        where PATIENTS.ID_PATIENT = v_id_patient;
    select months_between(TRUNC(sysdate),date_birth)/12
        into age_patient
        from dual;
    open cursor1 for
        select distinct GENDER_SPECIALTIES.ID_GENDER, SPECIALTIES.REQUIRED_MIN_AGE, SPECIALTIES.REQUIRED_MAX_AGE, DOCTORS.DELETE_DT, SPECIALTIES.DELETE_DT, HOSPITALS.DELETE_DT
            from CHESNOKOV_SE.TALONS
            join DOCTORS on DOCTORS.ID_DOCTOR = TALONS.ID_DOCTOR
            join HOSPITALS on HOSPITALS.ID_HOSPITAL = DOCTORS.ID_HOSPITAL
            join DOCTOR_SPECIALTIES on DOCTORS.ID_DOCTOR = DOCTOR_SPECIALTIES.ID_DOCTOR
            join SPECIALTIES on SPECIALTIES.ID_SPECIALTY = DOCTOR_SPECIALTIES.ID_SPECIALTY
            join GENDER_SPECIALTIES on SPECIALTIES.ID_SPECIALTY = GENDER_SPECIALTIES.ID_SPECIALITY
            where v_id_talon = TALONS.ID_TALON;
        LOOP
            FETCH cursor1 into id_gender_speciality, required_min_age, required_max_age, doc_del, spec_del, hosp_del;
            EXIT WHEN cursor1%notfound;
            if (id_gender_speciality = id_gender_patient) and (age_patient between required_min_age and required_max_age) and doc_del is null and spec_del is null and hosp_del is null
               then count_lucky := count_lucky + 1;
            end if;
        END LOOP;
        if count_lucky = 0
                then return 'Не подходящий пол или возвраст или что-то удалено';
        end if;
    close cursor1;

    insert into CHESNOKOV_SE.JOURNAL(ID_PATIENT, DATETIME, ID_TALON, AVAILABILITY) values (v_id_patient, v_datetime, v_id_talon, 1);
    update TALONS
        set TALONS.AVAILABILITY = 0
        where ID_TALON = v_id_talon;
    RETURN 'Строка успешна вставлена';
END f_appointment;

begin
      dbms_output.put_line( f_appointment(1,to_date('07-11-2021 16:00','DD-MM-YYYY HH24:MI'),6));
end;
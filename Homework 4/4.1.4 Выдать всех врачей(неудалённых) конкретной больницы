create or replace package pkg_all_doctors as
    function f_all_doctors return sys_refcursor;
    function f_all_doctors(v_input_id number) return sys_refcursor;
end;
create or replace package body pkg_all_doctors as
    function f_all_doctors
        return sys_refcursor
        as cursor1 sys_refcursor;
        v_input_area number := 1;
    begin
        open cursor1 for
        select doctors.DOCTOR_NAME, ID_HOSPITAL, QUALIFICATION_NAME, AREA_NAME
        from doctors
        join QUALIFICATIONS on DOCTORS.ID_QUALIFICATION = QUALIFICATIONS.ID_QUALIFICATION
        join AREAS  on AREAS.ID_AREA = DOCTORS.ID_AREA
        where (DOCTORS.DELETE_DT is null) and (DOCTORS.ID_HOSPITAL = 1)
        order by QUALIFICATION_LEVEL desc, (case when DOCTORS.ID_AREA = v_input_area then 1 else 2 end);
        return cursor1;
    end;

    function f_all_doctors(v_input_id number)
        return sys_refcursor
        as cursor1 sys_refcursor;
        v_input_area number := 1;
    begin
        open cursor1 for
        select doctors.DOCTOR_NAME, ID_HOSPITAL, QUALIFICATION_NAME, AREA_NAME
        from doctors
        join QUALIFICATIONS on DOCTORS.ID_QUALIFICATION = QUALIFICATIONS.ID_QUALIFICATION
        join AREAS  on AREAS.ID_AREA = DOCTORS.ID_AREA
        where (DOCTORS.DELETE_DT is null) and (DOCTORS.ID_HOSPITAL = 1) and doctors.ID_DOCTOR = v_input_id
        order by QUALIFICATION_LEVEL desc, (case when DOCTORS.ID_AREA = v_input_area then 1 else 2 end);
        return cursor1;
    end;
end;

declare
    v_doctor_name doctors.DOCTOR_NAME%type;
    v_id_hospital HOSPITALS.id_hospital%type;
    v_qualification_name QUALIFICATIONS.qualification_name%type;
    v_area_name areas.area_name%type;
    v_cursor1 sys_refcursor;
    v_cursor2 sys_refcursor;
begin
    v_cursor1 := pkg_all_doctors.f_all_doctors();
    v_cursor2 := pkg_all_doctors.f_all_doctors(1);
        LOOP
        FETCH v_cursor1 into v_doctor_name, v_id_hospital, v_qualification_name, v_area_name;
           EXIT WHEN v_cursor1%notfound;
           dbms_output.put_line(v_doctor_name || ' ' || v_id_hospital || ' ' || v_qualification_name || ' ' || v_area_name);
        END LOOP;
    CLOSE v_cursor1;
    dbms_output.put_line('------------------------------------------------');
        LOOP
        FETCH v_cursor2 into v_doctor_name, v_id_hospital, v_qualification_name, v_area_name;
           EXIT WHEN v_cursor2%notfound;
           dbms_output.put_line(v_doctor_name || ' ' || v_id_hospital || ' ' || v_qualification_name || ' ' || v_area_name);
        END LOOP;
    CLOSE v_cursor2;
end;

